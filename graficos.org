#+TITLE:     Gráficos con R

#+SETUPFILE: config.org
#+OPTIONS: H:3
#+PROPERTY: exports both 
#+PROPERTY: results output graphics
#+PROPERTY: eval no


* Introducción
#+begin_src R :exports none :tangle no
  setwd('~/github/intro/')
#+end_src

** Base y grid
*** Base y grid
- En =R= existen dos formas de generar gráficos:
  - Base graphics
  - Grid graphics
- Los gráficos base sólo producen un resultado gráfico, pero no un objeto.
- Los gráficos =grid= generan un resultado gráfico *y* un objeto.

*** Gráficos =grid=
Dentro del conjunto =grid= existen dos grandes paquetes:

**** =lattice=

  - Implementación de los gráficos /trellis/, /The Elements of Graphing Data/ de Cleveland)

  - Estructura matricial de paneles definida a través de una fórmula.

**** =ggplot2=

  - Implementación de /The Grammar of Graphics/ de Wilkinson.

  - Combinación de funciones que proporcionan los componentes (capas) del gráfico.

** Datos de ejemplo
*** Leemos desde el archivo local 
#+begin_src R 
  aranjuez <- read.csv('data/aranjuez.csv')

  summary(aranjuez)
#+end_src

*** Añadimos algunas columnas
#+begin_src R
aranjuez$date <- as.Date(aranjuez$X)
#+end_src
#+begin_src R 
  aranjuez$month <- as.numeric(
                    format(aranjuez$date, '%m'))

  aranjuez$year <- as.numeric(
                   format(aranjuez$date, '%Y'))

  aranjuez$day <- as.numeric(
                  format(aranjuez$date, '%j'))

  aranjuez$quarter <- quarters(aranjuez$date)
      
#+end_src

* Gráficos Grid

** Lattice

*** Lattice

- Documentación: [[http://lmdvr.r-forge.r-project.org/figures/figures.html][Código y Figuras del libro]]

#+begin_src R 
  library(lattice)
#+end_src

*** =xyplot=

#+begin_src R  :file figs/xyplot.pdf
  xyplot(Radiation ~ TempAvg, data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplot.pdf]]

    
*** Añadimos rejilla

#+begin_src R :file figs/xyplotPG.pdf
  xyplot(Radiation ~ TempAvg, data=aranjuez,
         grid = TRUE)
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotPG.pdf]]


*** Añadimos regresión lineal

#+begin_src R :file figs/xyplotPRG.pdf
  xyplot(Radiation ~ TempAvg, data=aranjuez,
         type=c('p', 'r'), grid = TRUE,
         lwd=2, col.line='black')
  
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotPRG.pdf]]

    

*** Añadimos ajuste local

#+begin_src R :file figs/xyplotSmooth.pdf
  xyplot(Radiation ~ TempAvg, data=aranjuez,
         type=c('p', 'smooth'), grid = TRUE,
         lwd=2, col.line='black')
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotSmooth.pdf]]


*** Paneles

#+begin_src R :file figs/xyplotYear.pdf
  xyplot(Radiation ~ TempAvg|factor(year),
         data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotYear.pdf]]

*** Grupos

#+begin_src R :file figs/xyplotQuarter.pdf
  xyplot(Radiation ~ TempAvg, groups=quarter,
         data=aranjuez, auto.key=list(space='right'))
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotQuarter.pdf]]

*** Paneles y grupos

#+begin_src R :file figs/xyplotQuarterYear.pdf
  xyplot(Radiation ~ TempAvg|factor(year),
         groups=quarter,
         data=aranjuez,
         layout=c(4, 2),
         auto.key=list(space='right'))
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotQuarterYear.pdf]]

*** Paneles y grupos
#+begin_src R :file figs/xyplotQuarterYearSmooth.pdf
  xyplot(Radiation ~ TempAvg|factor(year),
         groups=quarter,
         data=aranjuez,
         layout=c(4, 2),
         type=c('p', 'r'),
         auto.key=list(space='right'))
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotQuarterYearSmooth.pdf]]

*** Colores y tamaños
#+begin_src R :file figs/xyplotColors.pdf
  xyplot(Radiation ~ TempAvg,
         type=c('p', 'r'),
         cex=2, col='blue',
         alpha=.5, pch=19,
         lwd=3, col.line='black',
         data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotColors.pdf]]

*** Colores con grupos

#+begin_src R :file figs/xyplotColorGroups.pdf
  xyplot(Radiation ~ TempAvg,
         group=quarter,
         col=c('red', 'blue', 'green', 'yellow'),
         pch=19,
         auto.key=list(space='right'),
         data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotColorGroups.pdf]]

*** Colores con grupos: =par.settings= y =simpleTheme=
- Primero definimos el tema con =simpleTheme=
#+begin_src R 
  myTheme <- simpleTheme(col=c('red', 'blue',
                          'green', 'yellow'),
                          pch=19, alpha=.6)
#+end_src

*** Colores con grupos: =par.settings= y =simpleTheme=
- Aplicamos el resultado en =par.settings=
#+begin_src R :file figs/myTheme.pdf
  xyplot(Radiation ~ TempAvg,
         groups=quarter,
         par.settings=myTheme,
         auto.key=list(space='right'),
         data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/myTheme.pdf]]

*** Colores: brewer.pal

#+begin_src R 
library(RColorBrewer)

myPal <- brewer.pal(n = 4, 'Dark2')

myTheme <- simpleTheme(col = myPal,
                       pch=19, alpha=.6)
#+end_src

**** ColorBrewer: [[http://colorbrewer2.org/]]

*** Asignamos paleta con =par.settings=
#+begin_src R :file figs/brewer.pdf
xyplot(Radiation ~ TempAvg,
       groups=quarter,
       par.settings=myTheme,
       auto.key=list(space='right'),
       data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/brewer.pdf]]

*** Paneles a medida

#+begin_src R :file figs/panel.pdf
  xyplot(Radiation ~ TempAvg, data=aranjuez,
         panel=function(x, y, ...){
             panel.xyplot(x, y, ...)
             minIdx <- which.min(x)
             maxIdx <- which.max(x)
             panel.points(x[c(minIdx, maxIdx)],
                          y[c(minIdx, maxIdx)],
                          cex=2, col='red')
             panel.text(x[minIdx], y[minIdx],
                        'MIN', pos=1)
             })
#+end_src

*** 
#+RESULTS:
[[file:figs/panel.pdf]]

*** Matriz de gráficos de dispersión

#+begin_src R :file figs/splom.png
  splom(aranjuez[,c("TempAvg", "HumidAvg", "WindAvg",
                    "Rain", "Radiation", "ET")],
        pscale=0, alpha=0.6, cex=0.3, pch=19)
#+end_src

*** 
#+RESULTS:
[[file:figs/splom.png]]

*** Matriz de gráficos de dispersión

#+begin_src R :file figs/splomGroup.png
  splom(aranjuez[,c("TempAvg", "HumidAvg", "WindAvg",
                    "Rain", "Radiation", "ET")],
        groups=aranjuez$quarter,
        auto.key=list(space='right'),
        pscale=0, alpha=0.6, cex=0.3, pch=19)
#+end_src

*** 
#+RESULTS:
[[file:figs/splomGroup.png]]

*** =levelplot=

#+begin_src R :file figs/levelplot.pdf
  levelplot(TempAvg ~ year * day, data = aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/levelplot.pdf]]

*** =levelplot= con una paleta mejor
- Usamos =colorRampPalette= para generar una función que interpola colores a partir de una paleta
#+begin_src R
levelPal <- colorRampPalette(
    brewer.pal(n = 9, 'Oranges'))
#+end_src
- Comprobamos que es una función generadora de colores

#+begin_src R
levelPal(14)
#+end_src

#+RESULTS:
:  [1] "#FFF5EB" "#FEEBD9" "#FDE0C3" "#FDD3A8" "#FDC088" "#FDAB67" "#FD974A"
:  [8] "#F9812F" "#F16B16" "#E45709" "#D14501" "#B13A02" "#973003" "#7F2704"

- Usamos esta función con =col.regions=
#+begin_src R :file figs/levelplotPal.pdf
  levelplot(TempAvg ~ year * day,
            col.regions = levelPal,
            data = aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/levelplotPal.pdf]]

*** =contourplot=
#+begin_src R :file figs/contourplot.pdf
  contourplot(TempAvg ~ year * day,
              data = aranjuez,
              lwd = .5,
              labels = list(cex = 0.6),
              label.style = 'align',
              cuts = 5)
              
#+end_src

*** 
#+RESULTS:
[[file:figs/contourplot.pdf]]

*** Box-and-Whiskers

#+begin_src R :file figs/bwplot.pdf
  bwplot(Radiation ~ month, data=aranjuez,
         horizontal=FALSE, pch='|')
#+end_src

*** 
#+RESULTS:
[[file:figs/bwplot.pdf]]

*** Box-and-Whiskers

#+begin_src R :file figs/violin.pdf
  bwplot(Radiation ~ month, data=aranjuez,
         horizontal=FALSE,
         panel=panel.violin)
#+end_src

*** 
#+RESULTS:
[[file:figs/violin.pdf]]

    
*** Histogramas

#+begin_src R :file figs/histogram.pdf
  histogram(~ Radiation|factor(year), data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/histogram.pdf]]

*** Gráficos de densidad

#+begin_src R :file figs/density.pdf
densityplot(~ Radiation, groups=quarter,
            data=aranjuez,
            auto.key=list(space='right'))
#+end_src

*** 
#+RESULTS:
[[file:figs/density.pdf]]

*** =dotplot=
#+begin_src R 
  avRad <- aggregate(Radiation ~ month * year,
                     data=aranjuez, FUN=mean)
#+end_src

#+begin_src R :file figs/dotplot.pdf
  dotplot(month ~ Radiation|factor(year), data=avRad)
#+end_src

*** 
#+RESULTS:
[[file:figs/dotplot.pdf]]


*** Quantile-Quantile

#+begin_src R :file figs/qqHalf.pdf
  firstHalf <- aranjuez$quarter %in% c('Q1', 'Q2')
  
  qq(firstHalf ~ Radiation, data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/qqHalf.pdf]]

*** Quantile-quantile

#+begin_src R :file figs/qqWinter.pdf
  winter <- aranjuez$quarter %in% c('Q1', 'Q4')
  
  qq(winter ~ Radiation, data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/qqWinter.pdf]]

*** Quantile-Quantile

#+begin_src R :file figs/qqNorm.pdf
  qqmath(~TempAvg, data=aranjuez,
         groups=year, distribution=qnorm)
#+end_src

*** 
#+RESULTS:
[[file:figs/qqNorm.pdf]]


** ggplot2

*** ggplot2
- [[http://docs.ggplot2.org/current/][Documentación de ggplot2]]
- [[http://ggplot2.org/book/][Codigo del libro]]
- [[http://learnr.wordpress.com/2009/06/28/ggplot2-version-of-figures-in-lattice-multivariate-data-visualization-with-r-part-1/][ggplot2 desde lattice]] ([[http://learnr.files.wordpress.com/2009/08/latbook.pdf][PDF]])



